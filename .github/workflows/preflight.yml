# .github/workflows/preflight.yml
name: AWS Preflight Checks

on:
  pull_request:
    branches: [ main ] # Or your default branch
  workflow_dispatch: # Allows manual triggering

permissions:
  id-token: write # Required for AWS OIDC authentication
  contents: read # Required to check out the code

jobs:
  preflight-checks:
    runs-on: ubuntu-latest
    env:
      # Default check region (can be overridden by secrets/vars if needed)
      AWS_REGION: "ap-southeast-2"
      # Default Control Tower home region (assumed same as check region unless overridden)
      # Use secrets or vars if it's different or sensitive
      CT_HOME_REGION: "ap-southeast-2"
      # Default CloudFormation stack prefix (can be overridden by secrets/vars)
      # STACK_PREFIX: "AWSAccelerator" # Uses default from script if not set here

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Or your preferred Python 3.9+ version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # Replace with the ARN of the IAM role configured for GitHub OIDC
          role-to-assume: arn:aws:iam::<YOUR_AWS_ACCOUNT_ID>:role/<YOUR_GHA_OIDC_ROLE_NAME>
          aws-region: ${{ env.AWS_REGION }}
          # Optional: Specify role session name
          # role-session-name: GitHubActionsPreflightCheck

      - name: Run Preflight Checks
        run: python -m preflight_checks.aws_checks
        # The env block here is only needed if you uncomment the lines below
        # to override environment variables from secrets/vars.
        # env:
          # STACK_PREFIX: ${{ vars.PREFLIGHT_STACK_PREFIX || secrets.PREFLIGHT_STACK_PREFIX || 'AWSAccelerator' }}
          # CT_HOME_REGION: ${{ vars.CT_HOME_REGION || env.AWS_REGION }}

      # Optional: Run Pytest Tests (useful for CI validation)
      - name: Run Unit Tests with Coverage
        run: |
          pytest tests/ --cov=preflight_checks --cov-report=xml --cov-report=term-missing

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # Store Codecov token in GitHub secrets
          slug: ${{ github.repository }} 