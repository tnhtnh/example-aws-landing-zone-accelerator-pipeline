# .github/workflows/preflight.yml
name: Preflight check tests

on:
  push:
    branches:
      - master
      - "**" # All branches
  pull_request:
    branches:
      - master
  workflow_dispatch: # Allows manual triggering

permissions:
  id-token: write # Required for AWS OIDC authentication
  contents: read # Required to check out the code

jobs:
  preflight-code-tests:
    runs-on: ubuntu-latest
    env:
      # Default check region (can be overridden by secrets/vars if needed)
      AWS_REGION: "ap-southeast-2"
      # Default Control Tower home region (assumed same as check region unless overridden)
      # Use secrets or vars if it's different or sensitive
      CT_HOME_REGION: "ap-southeast-2"
      # Default CloudFormation stack prefix (can be overridden by secrets/vars)
      # STACK_PREFIX: "AWSAccelerator" # Uses default from script if not set here

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11" # Or your preferred Python 3.9+ version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install cfn-lint

      - name: Lint CloudFormation templates (cfn-lint)
        run: |
          cfn-lint config/customizations/*.yaml

      - name: Validate customizations-config
        uses: cardinalby/schema-validator-action@v3
        with:
          schema: https://raw.githubusercontent.com/awslabs/landing-zone-accelerator-on-aws/main/source/packages/@aws-accelerator/config/lib/schemas/customizations-config.json
          file: config/customizations-config.yaml
          all-errors: true

      - name: Validate global-config
        uses: cardinalby/schema-validator-action@v3
        with:
          schema: https://raw.githubusercontent.com/awslabs/landing-zone-accelerator-on-aws/main/source/packages/@aws-accelerator/config/lib/schemas/global-config.json
          file: config/global-config.yaml
          all-errors: true

      - name: Validate accounts-config
        uses: cardinalby/schema-validator-action@v3
        with:
          schema: https://raw.githubusercontent.com/awslabs/landing-zone-accelerator-on-aws/main/source/packages/@aws-accelerator/config/lib/schemas/accounts-config.json
          file: config/accounts-config.yaml
          all-errors: true

      - name: Validate iam-config
        uses: cardinalby/schema-validator-action@v3
        with:
          schema: https://raw.githubusercontent.com/awslabs/landing-zone-accelerator-on-aws/main/source/packages/@aws-accelerator/config/lib/schemas/iam-config.json
          file: config/iam-config.yaml
          all-errors: true

      - name: Validate replacements-config
        uses: cardinalby/schema-validator-action@v3
        with:
          schema: https://raw.githubusercontent.com/awslabs/landing-zone-accelerator-on-aws/main/source/packages/@aws-accelerator/config/lib/schemas/replacements-config.json
          file: config/replacements-config.yaml
          all-errors: true

      - name: Validate organization-config
        uses: cardinalby/schema-validator-action@v3
        with:
          schema: https://raw.githubusercontent.com/awslabs/landing-zone-accelerator-on-aws/main/source/packages/@aws-accelerator/config/lib/schemas/organization-config.json
          file: config/organization-config.yaml
          all-errors: true

      - name: Validate security-config
        uses: cardinalby/schema-validator-action@v3
        with:
          schema: https://raw.githubusercontent.com/awslabs/landing-zone-accelerator-on-aws/main/source/packages/@aws-accelerator/config/lib/schemas/security-config.json
          file: config/security-config.yaml
          all-errors: true

      # Optional: Run Pytest Tests (useful for CI validation)
      - name: Run Unit Tests with Coverage
        run: |
          pytest tests/ --cov=preflight_checks --cov-report=xml --cov-report=term-missing

      # Optional: Upload Coverage Report (e.g., to Codecov)
      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }} # Store Codecov token in GitHub secrets
      #     slug: ${{ github.repository }}
