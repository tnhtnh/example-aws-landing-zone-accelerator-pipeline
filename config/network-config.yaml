homeRegion: &HOME_REGION {{ AcceleratorHomeRegion }}
#####################################
# Delete default VPCs-- use this    #
# object to delete default VPCs in  #
# any non-excluded accounts         #
#####################################
defaultVpc:
  delete: true
  excludeAccounts: []

#####################################
# Transit Gateways-- use this object #
# to deploy transit gateways         #
#####################################
transitGateways:
  - name: Network-Main
    account: Network
    region: *HOME_REGION
    shareTargets:
      organizationalUnits:
        - Infrastructure
        - Portal
    asn: 65521
    dnsSupport: enable
    vpnEcmpSupport: enable
    defaultRouteTableAssociation: disable
    defaultRouteTablePropagation: disable
    autoAcceptSharingAttachments: enable
    routeTables:
      - name: Network-Main-Core
        routes: []
      - name: Network-Main-Datacenter
        routes: []
      - name: Network-Main-Development
        routes: []
      - name: Network-Main-Staging
        routes: []
      - name: Network-Main-Production
        routes: []

centralNetworkServices:
  delegatedAdminAccount: Network  
  networkFirewall:
    firewalls:
      - name: "{{ AcceleratorPrefix }}-firewall"
        firewallPolicy: "{{ AcceleratorPrefix }}-policy"
        subnets:
          - Network-Inspection-Egress-A
          - Network-Inspection-Egress-B
          - Network-Inspection-Egress-C
        vpc: Network-Egress
        loggingConfiguration:
          - destination: cloud-watch-logs
            type: ALERT

    policies:
      - name: "{{ AcceleratorPrefix }}-policy"
        regions:
          - *HOME_REGION
        firewallPolicy:
          statelessDefaultActions: ["aws:forward_to_sfe"]
          statelessFragmentDefaultActions: ["aws:forward_to_sfe"]
          statefulRuleGroups:
            - name: "{{ AcceleratorPrefix }}-rule-group"
            - name: "domain-list-group"
        shareTargets:
          organizationalUnits:
            - Infrastructure
    rules:
      - name: "{{ AcceleratorPrefix }}-rule-group"
        regions:
          - *HOME_REGION
        capacity: 100
        type: STATEFUL
        ruleGroup:
          rulesSource:
            statefulRules:
              # Block traffic between production VPCs
              - action: DROP
                header:
                  destination: {{ PortalProductionCidr }}
                  destinationPort: ANY
                  direction: ANY
                  protocol: IP
                  source: {{ PortalStagingCidr }}
                  sourcePort: ANY
                ruleOptions:
                  - keyword: sid
                    settings: ["100"]
              - action: DROP
                header:
                  destination: {{ PortalProductionCidr }}
                  destinationPort: ANY
                  direction: ANY
                  protocol: IP
                  source: {{ PortalDevelopmentCidr }}
                  sourcePort: ANY
                ruleOptions:
                  - keyword: sid
                    settings: ["200"]
              - action: ALERT
                header:
                  destination: 8.8.8.8/32
                  destinationPort: ANY
                  direction: FORWARD
                  protocol: TCP
                  source: ANY
                  sourcePort: ANY
                ruleOptions:
                  - keyword: msg
                    settings: ['"example message"']
                  - keyword: sid
                    settings: ["300"]

      - name: domain-list-group
        regions:
          - *HOME_REGION
        capacity: 10
        type: STATEFUL
        ruleGroup:
          rulesSource:
            rulesSourceList:
              generatedRulesType: DENYLIST
              # Add/Modify the domain list per business needs.
              targets: [".google.com"]
              targetTypes: ["TLS_SNI", "HTTP_HOST"]
          ruleVariables:
            ipSets:
              name: HOME_NET
              definition:
                - {{ PortalProductionCidr }}
                - {{ PortalStagingCidr }}
                - {{ PortalDevelopmentCidr }}
            portSets:
              name: HOME_NET
              definition:
                - "80"
                - "443"
  ipams:
    - name: "{{ AcceleratorPrefix }}-ipam"
      region: *HOME_REGION
      description: "{{ AcceleratorPrefix }} IPAM"
      operatingRegions:
        - ap-southeast-2
        - us-east-1
        - us-west-1
        - eu-central-1
        - eu-west-2
      pools:
        ### Global Ipam Pools ###
        - name: "{{ AcceleratorPrefix }}-aws-pool"
          description: "Primary AWS IP Space."
          provisionedCidrs:
            - "{{ AwsCidr }}"
        - name: "{{ AcceleratorPrefix }}-core-pool"
          description: "Core IP Space."
          locale: ap-southeast-2
          provisionedCidrs:
            - "{{ CoreCidr }}"
          sourceIpamPool: "{{ AcceleratorPrefix }}-aws-pool"
        - name: "{{ AcceleratorPrefix }}-portal-pool"
          description: "Portal IP Space."
          locale: ap-southeast-2
          provisionedCidrs:
            - "{{ PortalCidr }}"
          sourceIpamPool: "{{ AcceleratorPrefix }}-aws-pool"
        - name: "{{ AcceleratorPrefix }}-customer-pool"
          description: "Customer IP Space."
          locale: ap-southeast-2
          provisionedCidrs:
            - "{{ CustomerCidr }}"
          shareTargets:
            organizationalUnits:
              - Customer/Accounts
          sourceIpamPool: "{{ AcceleratorPrefix }}-aws-pool"

  route53Resolver:
    endpoints: []
    queryLogs:
      name: "{{ AcceleratorPrefix }}-query-logs"
      destinations:
        - s3
      shareTargets:
        organizationalUnits:
          - Infrastructure
          - Portal/Development
          - Portal/Staging
          - Portal/Production

    firewallRuleGroups:
      - name: "{{ AcceleratorPrefix }}-block-group"
        regions:
          - *HOME_REGION
        rules:
          - name: nxdomain-block-rule
            action: BLOCK
            customDomainList: dns-firewall-domain-lists/domain-list-1.txt
            priority: 100
            blockResponse: NXDOMAIN
          - name: override-block-rule
            action: BLOCK
            customDomainList: dns-firewall-domain-lists/domain-list-2.txt
            priority: 200
            blockResponse: OVERRIDE
            blockOverrideDomain: amazon.com
            blockOverrideTtl: 3600
          - name: managed-rule
            action: BLOCK
            managedDomainList: AWSManagedDomainsBotnetCommandandControl
            priority: 300
            blockResponse: NODATA
        shareTargets:
          organizationalUnits:
            - Infrastructure
            - Portal/Development
            - Portal/Staging
            - Portal/Production

endpointPolicies:
  - name: Default
    document: vpc-endpoint-policies/default.json
  - name: Ec2
    document: vpc-endpoint-policies/ec2.json

vpcs:
  - name: Network-Egress
    account: Network
    region: *HOME_REGION
    cidrs:
      - {{ CentralEgressCidr }}
    internetGateway: true
    enableDnsHostnames: true
    enableDnsSupport: true
    instanceTenancy: default
    useCentralEndpoints: false

    gatewayEndpoints:
      defaultPolicy: Default
      endpoints:
        - service: s3
        - service: dynamodb

    queryLogs:
      - "{{ AcceleratorPrefix }}-query-logs"

    natGateways:
      - name: Nat-Network-Egress-A
        subnet: Network-Egress-Pub-A
      - name: Nat-Network-Egress-B
        subnet: Network-Egress-Pub-B
      - name: Nat-Network-Egress-C
        subnet: Network-Egress-Pub-C

    routeTables:
      - name: Network-EgressTgwAttach-A
        routes:
          - name: NfwRoute
            destination: 0.0.0.0/0
            type: networkFirewall
            target: "{{ AcceleratorPrefix }}-firewall"
            targetAvailabilityZone: a


      - name: Network-EgressTgwAttach-B
        routes:
          - name: NfwRoute
            destination: 0.0.0.0/0
            type: networkFirewall
            target: "{{ AcceleratorPrefix }}-firewall"
            targetAvailabilityZone: b


      - name: Network-EgressTgwAttach-C
        routes:
          - name: NfwRoute
            destination: 0.0.0.0/0
            type: networkFirewall
            target: "{{ AcceleratorPrefix }}-firewall"
            targetAvailabilityZone: c

      - name: Network-Inspection-Egress-A
        routes:
          - name: NatRoute
            destination: 0.0.0.0/0
            type: natGateway
            target: Nat-Network-Egress-A


          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb

      - name: Network-Inspection-Egress-B
        routes:
          - name: NatRoute
            destination: 0.0.0.0/0
            type: natGateway
            target: Nat-Network-Egress-B

          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb

      - name: Network-Inspection-Egress-C
        routes:
          - name: NatRoute
            destination: 0.0.0.0/0
            type: natGateway
            target: Nat-Network-Egress-C

          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb

      - name: Network-Egress-Pub-A
        routes:
          - name: NfwRoute
            destination: {{ AwsCidr }}
            type: networkFirewall
            target: "{{ AcceleratorPrefix }}-firewall"
            targetAvailabilityZone: a
          - name: IgwRoute
            destination: 0.0.0.0/0
            type: internetGateway
            target: IGW
      - name: Network-Egress-Pub-B
        routes:
          - name: NfwRoute
            destination: {{ AwsCidr }}
            type: networkFirewall
            target: "{{ AcceleratorPrefix }}-firewall"
            targetAvailabilityZone: b
          - name: IgwRoute
            destination: 0.0.0.0/0
            type: internetGateway
            target: IGW
      - name: Network-Egress-Pub-C
        routes:
          - name: NfwRoute
            destination: {{ AwsCidr }}
            type: networkFirewall
            target: "{{ AcceleratorPrefix }}-firewall"
            targetAvailabilityZone: c
          - name: IgwRoute
            destination: 0.0.0.0/0
            type: internetGateway
            target: IGW
    subnets:
      - name: Network-Inspection-Egress-A
        availabilityZone: a
        routeTable: Network-Inspection-Egress-A
        ipv4CidrBlock: {{ CentralEgressNFAzACidr }}
      - name: Network-Inspection-Egress-B
        availabilityZone: b
        routeTable: Network-Inspection-Egress-B
        ipv4CidrBlock: {{ CentralEgressNFAzBCidr }}
      - name: Network-Inspection-Egress-C
        availabilityZone: c
        routeTable: Network-Inspection-Egress-C
        ipv4CidrBlock: {{ CentralEgressNFAzCCidr }}

      - name: Network-EgressTgwAttach-A
        availabilityZone: a
        routeTable: Network-EgressTgwAttach-A
        ipv4CidrBlock: {{ CentralEgressTgwAzACidr }}
      - name: Network-EgressTgwAttach-B
        availabilityZone: b
        routeTable: Network-EgressTgwAttach-B
        ipv4CidrBlock: {{ CentralEgressTgwAzBCidr }}
      - name: Network-EgressTgwAttach-C
        availabilityZone: c
        routeTable: Network-EgressTgwAttach-C
        ipv4CidrBlock: {{ CentralEgressTgwAzCCidr }}

      - name: Network-Egress-Pub-A
        availabilityZone: a
        routeTable: Network-Egress-Pub-A
        ipv4CidrBlock: {{ CentralEgressOutboundAzACidr }}
      - name: Network-Egress-Pub-B
        availabilityZone: b
        routeTable: Network-Egress-Pub-B
        ipv4CidrBlock: {{ CentralEgressOutboundAzBCidr }}
      - name: Network-Egress-Pub-C
        availabilityZone: c
        routeTable: Network-Egress-Pub-C
        ipv4CidrBlock: {{ CentralEgressOutboundAzCCidr }}


  - name: Portal-Development
    account: PortalDevelopment
    region: *HOME_REGION
    cidrs:
      - {{ PortalDevelopmentCidr }}
    internetGateway: false
    enableDnsHostnames: true
    enableDnsSupport: true
    instanceTenancy: default
    useCentralEndpoints: false

    gatewayEndpoints:
      defaultPolicy: Default
      endpoints:
        - service: s3
        - service: dynamodb

    interfaceEndpoints:
      central: false
      defaultPolicy: Default
      subnets:
        - Portal-Development-Private-A
        - Portal-Development-Private-B
        - Portal-Development-Private-C
      endpoints:
        - service: ec2
        - service: ec2messages
        - service: ssm
        - service: ssmmessages
        - service: kms
        - service: logs
        - service: cloudformation
        - service: secretsmanager
        - service: monitoring
        # - service: access-analyzer
        # - service: acm-pca
        # - service: application-autoscaling
        # - service: appmesh-envoy-management
        # - service: athena
        # - service: autoscaling
        # - service: autoscaling-plans
        # - service: awsconnector
        # - service: cassandra
        # - service: clouddirectory
        # - service: cloudtrail
        # - service: codebuild
        # - service: codecommit
        # - service: codepipeline
        # - service: config
        # - service: datasync
        # - service: ebs
        # - service: ecr.api
        # - service: ecr.dkr
        # - service: ecs
        # - service: ecs-agent
        # - service: ecs-telemetry
        # - service: elasticbeanstalk
        # - service: elasticbeanstalk-health
        # - service: elasticfilesystem
        # - service: elasticloadbalancing
        # - service: elasticmapreduce
        # - service: email-smtp
        # - service: events
        # - service: execute-api
        # - service: git-codecommit
        # - service: glue
        # - service: kinesis-firehose
        # - service: kinesis-streams
        # - service: license-manager
        # - service: macie2
        # - service: notebook
        # - service: sagemaker.api
        # - service: sagemaker.runtime
        # - service: servicecatalog
        # - service: sms
        # - service: sns
        # - service: sqs
        # - service: states
        # - service: storagegateway
        # - service: sts
        # - service: synthetics
        # - service: transfer
        # - service: transfer.server
        # - service: workspaces
    queryLogs:
      - "{{ AcceleratorPrefix }}-query-logs"

    dnsFirewallRuleGroups:
      - name: "{{ AcceleratorPrefix }}-block-group"
        priority: 101

    networkAcls:
      - name: Portal-Development-Public-ACL
        subnetAssociations:
          - Portal-Development-Public-A
          - Portal-Development-Public-B
          - Portal-Development-Public-C
        inboundRules:
          - rule: 100
            protocol: 6
            fromPort: 80
            toPort: 80
            action: allow
            source: 0.0.0.0/0
          - rule: 200
            protocol: 6
            fromPort: 443
            toPort: 443
            action: allow
            source: 0.0.0.0/0
          - rule: 10000
            protocol: -1
            fromPort: 0
            toPort: 65535
            action: deny
            source: 0.0.0.0/0
        outboundRules:
          - rule: 100
            protocol: -1
            fromPort: 1024
            toPort: 65535
            action: allow
            destination: 0.0.0.0/0
          - rule: 32766
            protocol: -1
            fromPort: 0
            toPort: 65535
            action: deny
            destination: 0.0.0.0/0
        tags:
          - key: Name
            value: Portal-Development-Public-ACL

    routeTables:
      - name: Portal-Development-Private-A
        routes:
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb
      - name: Portal-Development-Private-B
        routes:
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb
      - name: Portal-Development-Private-C
        routes:
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb
      - name: Portal-Development-Public-A
        routes: []
      - name: Portal-Development-Public-B
        routes: []
      - name: Portal-Development-Public-C
        routes: []
    subnets:
      - name: Portal-Development-Private-A
        availabilityZone: a
        routeTable: Portal-Development-Private-A
        ipv4CidrBlock: {{ PortalDevelopmentPrivateAzACidr }}
      - name: Portal-Development-Private-B
        availabilityZone: b
        routeTable: Portal-Development-Private-B
        ipv4CidrBlock: {{ PortalDevelopmentPrivateAzBCidr }}
      - name: Portal-Development-Private-C
        availabilityZone: c
        routeTable: Portal-Development-Private-C
        ipv4CidrBlock: {{ PortalDevelopmentPrivateAzCCidr }}
      - name: Portal-Development-Public-A
        availabilityZone: a
        routeTable: Portal-Development-Public-A
        ipv4CidrBlock: {{ PortalDevelopmentPublicAzACidr }}
      - name: Portal-Development-Public-B
        availabilityZone: b
        routeTable: Portal-Development-Public-B
        ipv4CidrBlock: {{ PortalDevelopmentPublicAzBCidr }}
      - name: Portal-Development-Public-C
        availabilityZone: c
        routeTable: Portal-Development-Public-C
        ipv4CidrBlock: {{ PortalDevelopmentPublicAzCCidr }}

  - name: Portal-Staging
    account: PortalStaging
    region: *HOME_REGION
    cidrs:
      - {{ PortalStagingCidr }}
    internetGateway: false
    enableDnsHostnames: true
    enableDnsSupport: true
    instanceTenancy: default
    useCentralEndpoints: false

    gatewayEndpoints:
      defaultPolicy: Default
      endpoints:
        - service: s3
        - service: dynamodb

    interfaceEndpoints:
      central: false
      defaultPolicy: Default
      subnets:
        - Portal-Staging-Private-A
        - Portal-Staging-Private-B
        - Portal-Staging-Private-C
      endpoints:
        - service: ec2
        - service: ec2messages
        - service: ssm
        - service: ssmmessages
        - service: kms
        - service: logs
        - service: cloudformation
        - service: secretsmanager
        - service: monitoring
        # - service: access-analyzer
        # - service: acm-pca
        # - service: application-autoscaling
        # - service: appmesh-envoy-management
        # - service: athena
        # - service: autoscaling
        # - service: autoscaling-plans
        # - service: awsconnector
        # - service: cassandra
        # - service: clouddirectory
        # - service: cloudtrail
        # - service: codebuild
        # - service: codecommit
        # - service: codepipeline
        # - service: config
        # - service: datasync
        # - service: ebs
        # - service: ecr.api
        # - service: ecr.dkr
        # - service: ecs
        # - service: ecs-agent
        # - service: ecs-telemetry
        # - service: elasticbeanstalk
        # - service: elasticbeanstalk-health
        # - service: elasticfilesystem
        # - service: elasticloadbalancing
        # - service: elasticmapreduce
        # - service: email-smtp
        # - service: events
        # - service: execute-api
        # - service: git-codecommit
        # - service: glue
        # - service: kinesis-firehose
        # - service: kinesis-streams
        # - service: license-manager
        # - service: macie2
        # - service: notebook
        # - service: sagemaker.api
        # - service: sagemaker.runtime
        # - service: servicecatalog
        # - service: sms
        # - service: sns
        # - service: sqs
        # - service: states
        # - service: storagegateway
        # - service: sts
        # - service: synthetics
        # - service: transfer
        # - service: transfer.server
        # - service: workspaces
    queryLogs:
      - "{{ AcceleratorPrefix }}-query-logs"

    dnsFirewallRuleGroups:
      - name: "{{ AcceleratorPrefix }}-block-group"
        priority: 101

    networkAcls:
      - name: Portal-Staging-Public-ACL
        subnetAssociations:
          - Portal-Staging-Public-A
          - Portal-Staging-Public-B
          - Portal-Staging-Public-C
        inboundRules:
          - rule: 100
            protocol: 6
            fromPort: 80
            toPort: 80
            action: allow
            source: 0.0.0.0/0
          - rule: 200
            protocol: 6
            fromPort: 443
            toPort: 443
            action: allow
            source: 0.0.0.0/0
          - rule: 10000
            protocol: -1
            fromPort: 0
            toPort: 65535
            action: deny
            source: 0.0.0.0/0
        outboundRules:
          - rule: 100
            protocol: -1
            fromPort: 1024
            toPort: 65535
            action: allow
            destination: 0.0.0.0/0
          - rule: 32766
            protocol: -1
            fromPort: 0
            toPort: 65535
            action: deny
            destination: 0.0.0.0/0
        tags:
          - key: Name
            value: Portal-Staging-Public-ACL

    routeTables:
      - name: Portal-Staging-Private-A
        routes:
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb
      - name: Portal-Staging-Private-B
        routes:
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb
      - name: Portal-Staging-Private-C
        routes:
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb
      - name: Portal-Staging-Public-A
        routes: []

      - name: Portal-Staging-Public-B
        routes: []
      - name: Portal-Staging-Public-C
        routes: []

    subnets:
      - name: Portal-Staging-Private-A
        availabilityZone: a
        routeTable: Portal-Staging-Private-A
        ipv4CidrBlock: {{ PortalStagingPrivateAzACidr }}
      - name: Portal-Staging-Private-B
        availabilityZone: b
        routeTable: Portal-Staging-Private-B
        ipv4CidrBlock: {{ PortalStagingPrivateAzBCidr }}
      - name: Portal-Staging-Private-C
        availabilityZone: c
        routeTable: Portal-Staging-Private-C
        ipv4CidrBlock: {{ PortalStagingPrivateAzCCidr }}
      - name: Portal-Staging-Public-A
        availabilityZone: a
        routeTable: Portal-Staging-Public-A
        ipv4CidrBlock: {{ PortalStagingPublicAzACidr }}
      - name: Portal-Staging-Public-B
        availabilityZone: b
        routeTable: Portal-Staging-Public-B
        ipv4CidrBlock: {{ PortalStagingPublicAzBCidr }}
      - name: Portal-Staging-Public-C
        availabilityZone: c
        routeTable: Portal-Staging-Public-C
        ipv4CidrBlock: {{ PortalStagingPublicAzCCidr }}


  - name: Portal-Production
    account: PortalProduction
    region: *HOME_REGION
    cidrs:
      - {{ PortalProductionCidr }}
    internetGateway: true
    enableDnsHostnames: true
    enableDnsSupport: true
    instanceTenancy: default
    useCentralEndpoints: false

    natGateways:
      - name: Nat-Network-Egress-A
        subnet: Portal-Production-Private-A
      - name: Nat-Network-Egress-B
        subnet: Portal-Production-Private-B
      - name: Nat-Network-Egress-C
        subnet: Portal-Production-Private-C

    gatewayEndpoints:
      defaultPolicy: Default
      endpoints:
        - service: s3
        - service: dynamodb

    interfaceEndpoints:
      central: false
      defaultPolicy: Default
      subnets:
        - Portal-Production-Private-A
        - Portal-Production-Private-B
        - Portal-Production-Private-C
      endpoints:
        - service: ec2
        - service: ec2messages
        - service: ssm
        - service: ssmmessages
        - service: kms
        - service: logs
        - service: cloudformation
        - service: secretsmanager
        - service: monitoring
        - service: ecs
        - service: ecs-agent
        - service: ecs-telemetry
        - service: ecr.api
        - service: ecr.dkr
        - service: sts
        - service: sns
        - service: sqs
        # - service: access-analyzer
        # - service: acm-pca
        # - service: application-autoscaling
        # - service: appmesh-envoy-management
        # - service: athena
        # - service: autoscaling
        # - service: autoscaling-plans
        # - service: awsconnector
        # - service: cassandra
        # - service: clouddirectory
        # - service: cloudtrail
        # - service: codebuild
        # - service: codecommit
        # - service: codepipeline
        # - service: config
        # - service: datasync
        # - service: ebs
        #  - service: ecr.api
        # - service: ecr.dkr
        # - service: ecs
        # - service: ecs-agent
        # - service: ecs-telemetry
        # - service: elasticbeanstalk
        # - service: elasticbeanstalk-health
        # - service: elasticfilesystem
        # - service: elasticloadbalancing
        # - service: elasticmapreduce
        # - service: email-smtp
        # - service: events
        # - service: execute-api
        # - service: git-codecommit
        # - service: glue
        # - service: kinesis-firehose
        # - service: kinesis-streams
        # - service: license-manager
        # - service: macie2
        # - service: notebook
        # - service: sagemaker.api
        # - service: sagemaker.runtime
        # - service: servicecatalog
        # - service: sms
        # - service: sns
        # - service: sqs
        # - service: states
        # - service: storagegateway
        # - service: sts
        # - service: synthetics
        # - service: transfer
        # - service: transfer.server
        # - service: workspaces
    queryLogs:
      - "{{ AcceleratorPrefix }}-query-logs"

    dnsFirewallRuleGroups:
      - name: "{{ AcceleratorPrefix }}-block-group"
        priority: 101

    networkAcls:
      - name: Portal-Production-Public-ACL
        subnetAssociations:
          - Portal-Production-Public-A
          - Portal-Production-Public-B
          - Portal-Production-Public-C
        inboundRules:
          - rule: 100
            protocol: 6
            fromPort: 80
            toPort: 80
            action: allow
            source: 0.0.0.0/0
          - rule: 200
            protocol: 6
            fromPort: 443
            toPort: 443
            action: allow
            source: 0.0.0.0/0
          - rule: 10000
            protocol: -1
            fromPort: 0
            toPort: 65535
            action: deny
            source: 0.0.0.0/0
        outboundRules:
          - rule: 100
            protocol: -1
            fromPort: 1024
            toPort: 65535
            action: allow
            destination: 0.0.0.0/0
          - rule: 32766
            protocol: -1
            fromPort: 0
            toPort: 65535
            action: deny
            destination: 0.0.0.0/0
        tags:
          - key: Name
            value: Portal-Production-Public-ACL

    routeTables:
      - name: Portal-Production-Private-A
        routes:
          - name: NatGatewayRoute
            destination: 0.0.0.0/0
            type: natGateway
            target: Nat-Network-Egress-A
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb
      - name: Portal-Production-Private-B
        routes:
          - name: NatGatewayRoute
            destination: 0.0.0.0/0
            type: natGateway
            target: Nat-Network-Egress-B
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb
      - name: Portal-Production-Private-C
        routes:
          - name: NatGatewayRoute
            destination: 0.0.0.0/0
            type: natGateway
            target: Nat-Network-Egress-C
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb
      - name: Portal-Production-Public-A
        routes:
          - name: IGW
            destination: 0.0.0.0/0
            type: internetGateway
            target: IGW
      - name: Portal-Production-Public-B
        routes:
          - name: IGW
            destination: 0.0.0.0/0
            type: internetGateway
            target: IGW
      - name: Portal-Production-Public-C
        routes:
          - name: IGW
            destination: 0.0.0.0/0
            type: internetGateway
            target: IGW

    subnets:
      - name: Portal-Production-Private-A
        availabilityZone: a
        routeTable: Portal-Production-Private-A
        ipv4CidrBlock: {{ PortalProductionPrivateAzACidr }}
      - name: Portal-Production-Private-B
        availabilityZone: b
        routeTable: Portal-Production-Private-B
        ipv4CidrBlock: {{ PortalProductionPrivateAzBCidr }}
      - name: Portal-Production-Private-C
        availabilityZone: c
        routeTable: Portal-Production-Private-C
        ipv4CidrBlock: {{ PortalProductionPrivateAzCCidr }}
      - name: Portal-Production-Public-A
        availabilityZone: a
        routeTable: Portal-Production-Public-A
        ipv4CidrBlock: {{ PortalProductionPublicAzACidr }}
      - name: Portal-Production-Public-B
        availabilityZone: b
        routeTable: Portal-Production-Public-B
        ipv4CidrBlock: {{ PortalProductionPublicAzBCidr }}
      - name: Portal-Production-Public-C
        availabilityZone: c
        routeTable: Portal-Production-Public-C
        ipv4CidrBlock: {{ PortalProductionPublicAzCCidr }}


vpcFlowLogs:
  trafficType: ALL
  maxAggregationInterval: 600
  destinations:
    - s3
  destinationsConfig:
    s3:
      lifecycleRules: []
    cloudWatchLogs:
      retentionInDays: 365
  defaultFormat: false
  customFields:
    - version
    - account-id
    - interface-id
    - srcaddr
    - dstaddr
    - srcport
    - dstport
    - protocol
    - packets
    - bytes
    - start
    - end
    - action
    - log-status
    - vpc-id
    - subnet-id
    - instance-id
    - tcp-flags
    - type
    - pkt-srcaddr
    - pkt-dstaddr
    - region
    - az-id
    - pkt-src-aws-service
    - pkt-dst-aws-service
    - flow-direction
    - traffic-path


vpcTemplates:
  - name: CustomerVPC
    region: {{ AcceleratorHomeRegion }}
    deploymentTargets:
      organizationalUnits:
        - Customer/Accounts
    useCentralEndpoints: false
    ipamAllocations:
      - ipamPoolName: "{{ AcceleratorPrefix }}-customer-pool"
        netmaskLength: 24
    internetGateway: true
    enableDnsHostnames: true
    enableDnsSupport: true
    instanceTenancy: default
    routeTables:
      - name: CustomerVPC-Public-RouteTable-A
        routes:
          - name: IGW
            destination: 0.0.0.0/0
            type: internetGateway
            target: IGW
      - name: CustomerVPC-Public-RouteTable-B
        routes:
          - name: IGW
            destination: 0.0.0.0/0
            type: internetGateway
            target: IGW
      - name: CustomerVPC-Public-RouteTable-C
        routes:
          - name: IGW
            destination: 0.0.0.0/0
            type: internetGateway
            target: IGW

      - name: CustomerVPC-Private-RouteTable-A
        routes:
          - name: NatRoute
            destination: 0.0.0.0/0
            type: natGateway
            target: Nat-CustomerVPC-Public-A
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb
      - name: CustomerVPC-Private-RouteTable-B
        routes:
          - name: NatRoute
            destination: 0.0.0.0/0
            type: natGateway
            target: Nat-CustomerVPC-Public-B
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb
      - name: CustomerVPC-Private-RouteTable-C
        routes:
          - name: NatRoute
            destination: 0.0.0.0/0
            type: natGateway
            target: Nat-CustomerVPC-Public-C
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb

    subnets:
      - name: CustomerVPC-Public-Subnet-A
        availabilityZone: a
        routeTable: CustomerVPC-Public-RouteTable-A
        ipamAllocation:
          ipamPoolName: "{{ AcceleratorPrefix }}-customer-pool"
          netmaskLength: 27
      - name: CustomerVPC-Public-Subnet-B
        availabilityZone: b
        routeTable: CustomerVPC-Public-RouteTable-B
        ipamAllocation:
          ipamPoolName: "{{ AcceleratorPrefix }}-customer-pool"
          netmaskLength: 27
      - name: CustomerVPC-Public-Subnet-C
        availabilityZone: c
        routeTable: CustomerVPC-Public-RouteTable-C
        ipamAllocation:
          ipamPoolName: "{{ AcceleratorPrefix }}-customer-pool"
          netmaskLength: 27
      - name: CustomerVPC-Private-Subnet-A
        availabilityZone: a
        routeTable: CustomerVPC-Private-RouteTable-A
        ipamAllocation:
          ipamPoolName: "{{ AcceleratorPrefix }}-customer-pool"
          netmaskLength: 27
      - name: CustomerVPC-Private-Subnet-B
        availabilityZone: b
        routeTable: CustomerVPC-Private-RouteTable-B
        ipamAllocation:
          ipamPoolName: "{{ AcceleratorPrefix }}-customer-pool"
          netmaskLength: 27
      - name: CustomerVPC-Private-Subnet-C
        availabilityZone: c
        routeTable: CustomerVPC-Private-RouteTable-C
        ipamAllocation:
          ipamPoolName: "{{ AcceleratorPrefix }}-customer-pool"
          netmaskLength: 27

    natGateways:
      - name: Nat-CustomerVPC-Public-A
        subnet: CustomerVPC-Public-Subnet-A
      - name: Nat-CustomerVPC-Public-B
        subnet: CustomerVPC-Public-Subnet-B
      - name: Nat-CustomerVPC-Public-C
        subnet: CustomerVPC-Public-Subnet-C
    gatewayEndpoints:
      defaultPolicy: Default
      endpoints:
        - service: s3
        - service: dynamodb
    interfaceEndpoints:
      central: false
      defaultPolicy: Default
      subnets:
        - CustomerVPC-Private-Subnet-A
        - CustomerVPC-Private-Subnet-B
        - CustomerVPC-Private-Subnet-C
      endpoints:
        - service: ec2
        - service: ec2messages
        - service: ssm
        - service: ssmmessages
        - service: kms
        - service: logs
        - service: cloudformation
        - service: secretsmanager
        - service: monitoring

prefixLists:
  - addressFamily: IPv4
    entries:
      - "{{ OnPremisesPrefixList }}"
    maxEntries: 100
    name: onpremsises-prefix-list
    deploymentTargets:
      organizationalUnits:
        - Infrastructure
        - Portal/Development
        - Portal/Staging
        - Portal/Production
