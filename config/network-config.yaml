homeRegion: &HOME_REGION {{ AcceleratorHomeRegion }}
#####################################
# Delete default VPCs-- use this    #
# object to delete default VPCs in  #
# any non-excluded accounts         #
#####################################
defaultVpc:
  delete: true
  excludeAccounts: []

#####################################
# Transit Gateways-- use this object #
# to deploy transit gateways         #
#####################################
transitGateways:
  - name: Network-Main
    account: Network
    region: *HOME_REGION
    shareTargets:
      organizationalUnits:
        - Infrastructure
        - Portal
    asn: 65521
    dnsSupport: enable
    vpnEcmpSupport: enable
    defaultRouteTableAssociation: disable
    defaultRouteTablePropagation: disable
    autoAcceptSharingAttachments: enable
    routeTables:
      - name: Network-Main-Core
        routes: []
      - name: Network-Main-Development
        routes:
          - destinationCidrBlock: 0.0.0.0/0
            attachment:
              vpcName: Network-Egress
              account: Network
      - name: Network-Main-Staging
        routes:
          - destinationCidrBlock: 0.0.0.0/0
            attachment:
              vpcName: Network-Egress
              account: Network
      - name: Network-Main-Production
        routes:
          - destinationCidrBlock: 0.0.0.0/0
            attachment:
              vpcName: Network-Egress
              account: Network

centralNetworkServices:
  delegatedAdminAccount: Network
  networkFirewall:
    firewalls:
      - name: "{{ AcceleratorPrefix }}-firewall"
        firewallPolicy: "{{ AcceleratorPrefix }}-policy"
        subnets:
          - Network-Egress-A
          - Network-Egress-B
          - Network-Egress-C
        vpc: Network-Egress
        loggingConfiguration:
          # - destination: s3
          - destination: cloud-watch-logs
            type: ALERT
          - destination: cloud-watch-logs
            type: FLOW
    policies:
      - name: "{{ AcceleratorPrefix }}-policy"
        regions:
          - *HOME_REGION
        firewallPolicy:
          statelessDefaultActions: ["aws:forward_to_sfe"]
          statelessFragmentDefaultActions: ["aws:forward_to_sfe"]
          statefulRuleGroups:
            - name: "{{ AcceleratorPrefix }}-rule-group"
            - name: "domain-list-group"
        shareTargets:
          organizationalUnits:
            - Infrastructure
    rules:
      - name: "{{ AcceleratorPrefix }}-rule-group"
        regions:
          - *HOME_REGION
        capacity: 100
        type: STATEFUL
        ruleGroup:
          rulesSource:
            statefulRules:
              # Block traffic between production VPCs
              - action: DROP
                header:
                  destination: 10.4.0.0/22
                  destinationPort: ANY
                  direction: ANY
                  protocol: IP
                  source: 10.5.0.0/22
                  sourcePort: ANY
                ruleOptions:
                  - keyword: sid
                    settings: ["100"]

              - action: ALERT
                header:
                  destination: 8.8.8.8/32
                  destinationPort: ANY
                  direction: FORWARD
                  protocol: TCP
                  source: ANY
                  sourcePort: ANY
                ruleOptions:
                  - keyword: msg
                    settings: ['"example message"']
                  - keyword: sid
                    settings: ["102"]

      - name: domain-list-group
        regions:
          - *HOME_REGION
        capacity: 10
        type: STATEFUL
        ruleGroup:
          rulesSource:
            rulesSourceList:
              generatedRulesType: DENYLIST
              # Add/Modify the domain list per business needs.
              targets: [".google.com"]
              targetTypes: ["TLS_SNI", "HTTP_HOST"]
          ruleVariables:
            ipSets:
              name: HOME_NET
              definition:
                - 10.1.0.0/22
                - 10.2.0.0/22
                - 10.3.0.0/22
                - 10.4.0.0/22
                - 10.5.0.0/22
            portSets:
              name: HOME_NET
              definition:
                - "80"
                - "443"
  ipams:
    - name: "{{ AcceleratorPrefix }}-ipam"
      region: *HOME_REGION
      description: "{{ AcceleratorPrefix }} IPAM"
      operatingRegions:
        - ap-southeast-2
        - us-east-1
        - us-west-1
        - eu-central-1
        - eu-west-2
      pools:
        ### Global Ipam Pools ###
        - name: "{{ AcceleratorPrefix }}-aws-pool"
          description: "Primary AWS IP Space."
          provisionedCidrs:
            - "{{ AwsCidr }}"
        - name: "{{ AcceleratorPrefix }}-core-pool"
          description: "Core IP Space."
          locale: ap-southeast-2
          provisionedCidrs:
            - "{{ CoreCidr }}"
          sourceIpamPool: "{{ AcceleratorPrefix }}-aws-pool"
        - name: "{{ AcceleratorPrefix }}-portal-pool"
          description: "Portal IP Space."
          locale: ap-southeast-2
          provisionedCidrs:
            - "{{ PortalCidr }}"
          sourceIpamPool: "{{ AcceleratorPrefix }}-aws-pool"
        - name: "{{ AcceleratorPrefix }}-customer-pool"
          description: "Customer IP Space."
          locale: ap-southeast-2
          provisionedCidrs:
            - "{{ CustomerCidr }}"
          shareTargets:
            organizationalUnits:
              - Customer/Accounts
          sourceIpamPool: "{{ AcceleratorPrefix }}-aws-pool"

  route53Resolver:
    endpoints: []
    queryLogs:
      name: "{{ AcceleratorPrefix }}-query-logs"
      destinations:
        - s3
      shareTargets:
        organizationalUnits:
          - Infrastructure
          - Portal/Development
          - Portal/Staging
          - Portal/Production

    firewallRuleGroups:
      - name: "{{ AcceleratorPrefix }}-block-group"
        regions:
          - *HOME_REGION
        rules:
          - name: nxdomain-block-rule
            action: BLOCK
            customDomainList: dns-firewall-domain-lists/domain-list-1.txt
            priority: 100
            blockResponse: NXDOMAIN
          - name: override-block-rule
            action: BLOCK
            customDomainList: dns-firewall-domain-lists/domain-list-2.txt
            priority: 200
            blockResponse: OVERRIDE
            blockOverrideDomain: amazon.com
            blockOverrideTtl: 3600
          - name: managed-rule
            action: BLOCK
            managedDomainList: AWSManagedDomainsBotnetCommandandControl
            priority: 300
            blockResponse: NODATA
        shareTargets:
          organizationalUnits:
            - Infrastructure
            - Portal/Development
            - Portal/Staging
            - Portal/Production

endpointPolicies:
  - name: Default
    document: vpc-endpoint-policies/default.json
  - name: Ec2
    document: vpc-endpoint-policies/ec2.json

vpcs:
  - name: Network-Egress
    account: Network
    region: *HOME_REGION
    cidrs:
      - {{ CentralEgressCidr }}
    internetGateway: true
    enableDnsHostnames: true
    enableDnsSupport: true
    instanceTenancy: default
    useCentralEndpoints: false

    gatewayEndpoints:
      defaultPolicy: Default
      endpoints:
        - service: s3
        - service: dynamodb

    queryLogs:
      - "{{ AcceleratorPrefix }}-query-logs"

    natGateways:
      - name: Nat-Network-Egress-A
        subnet: Network-Egress-Pub-A
      - name: Nat-Network-Egress-B
        subnet: Network-Egress-Pub-B
      - name: Nat-Network-Egress-C
        subnet: Network-Egress-Pub-C

    routeTables:
      - name: Network-EgressTgwAttach-A
        routes:
          - name: NfwRoute
            destination: 0.0.0.0/0
            type: networkFirewall
            target: "{{ AcceleratorPrefix }}-firewall"
            targetAvailabilityZone: a

      - name: Network-EgressTgwAttach-B
        routes:
          - name: NfwRoute
            destination: 0.0.0.0/0
            type: networkFirewall
            target: "{{ AcceleratorPrefix }}-firewall"
            targetAvailabilityZone: b

      - name: Network-EgressTgwAttach-C
        routes:
          - name: NfwRoute
            destination: 0.0.0.0/0
            type: networkFirewall
            target: "{{ AcceleratorPrefix }}-firewall"
            targetAvailabilityZone: c

      - name: Network-Inspection-Egress-A
        routes:
          - name: NatRoute
            destination: 0.0.0.0/0
            type: natGateway
            target: Nat-Network-Egress-A
          - name: TgwRoute
            destination: {{ AwsCidr }}
            type: transitGateway
            target: Network-Main
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb

      - name: Network-Inspection-Egress-B
        routes:
          - name: NatRoute
            destination: 0.0.0.0/0
            type: natGateway
            target: Nat-Network-Egress-B
          - name: TgwRoute
            destination: {{ AwsCidr }}
            type: transitGateway
            target: Network-Main
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb

      - name: Network-Inspection-Egress-C
        routes:
          - name: NatRoute
            destination: 0.0.0.0/0
            type: natGateway
            target: Nat-Network-Egress-C
          - name: TgwRoute
            destination: {{ AwsCidr }}
            type: transitGateway
            target: Network-Main
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb

      - name: Network-Egress-Pub-A
        routes:
          - name: NfwRoute
            destination: {{ AwsCidr }}
            type: networkFirewall
            target: "{{ AcceleratorPrefix }}-firewall"
            targetAvailabilityZone: a
          - name: IgwRoute
            destination: 0.0.0.0/0
            type: internetGateway
            target: IGW
      - name: Network-Egress-Pub-B
        routes:
          - name: NfwRoute
            destination: {{ AwsCidr }}
            type: networkFirewall
            target: "{{ AcceleratorPrefix }}-firewall"
            targetAvailabilityZone: b
          - name: IgwRoute
            destination: 0.0.0.0/0
            type: internetGateway
            target: IGW
      - name: Network-Egress-Pub-C
        routes:
          - name: NfwRoute
            destination: {{ AwsCidr }}
            type: networkFirewall
            target: "{{ AcceleratorPrefix }}-firewall"
            targetAvailabilityZone: c
          - name: IgwRoute
            destination: 0.0.0.0/0
            type: internetGateway
            target: IGW
    subnets:
      - name: Network-Inspection-Egress-A
        availabilityZone: a
        routeTable: Network-Inspection-Egress-A
        ipv4CidrBlock: {{ CentralEgressNFAzACidr }}
      - name: Network-Inspection-Egress-B
        availabilityZone: b
        routeTable: Network-Inspection-Egress-B
        ipv4CidrBlock: {{ CentralEgressNFAzBCidr }}
      - name: Network-Inspection-Egress-C
        availabilityZone: c
        routeTable: Network-Inspection-Egress-C
        ipv4CidrBlock: {{ CentralEgressNFAzCCidr }}

      - name: Network-EgressTgwAttach-A
        availabilityZone: a
        routeTable: Network-EgressTgwAttach-A
        ipv4CidrBlock: {{ CentralEgressTgwAzACidr }}
      - name: Network-EgressTgwAttach-B
        availabilityZone: b
        routeTable: Network-EgressTgwAttach-B
        ipv4CidrBlock: {{ CentralEgressTgwAzBCidr }}
      - name: Network-EgressTgwAttach-C
        availabilityZone: c
        routeTable: Network-EgressTgwAttach-C
        ipv4CidrBlock: {{ CentralEgressTgwAzCCidr }}

      - name: Network-Egress-Pub-A
        availabilityZone: a
        routeTable: Network-Egress-Pub-A
        ipv4CidrBlock: {{ CentralEgressOutboundAzACidr }}
      - name: Network-Egress-Pub-B
        availabilityZone: b
        routeTable: Network-Egress-Pub-B
        ipv4CidrBlock: {{ CentralEgressOutboundAzBCidr }}
      - name: Network-Egress-Pub-C
        availabilityZone: c
        routeTable: Network-Egress-Pub-C
        ipv4CidrBlock: {{ CentralEgressOutboundAzCCidr }}

    transitGatewayAttachments:
      - name: Network-Inspection
        transitGateway:
          name: Network-Main
          account: Network
        options:
          applianceModeSupport: enable
        routeTableAssociations:
          - Network-Main-Core
        routeTablePropagations: []
        subnets:
          - Network-EgressTgwAttach-A
          - Network-EgressTgwAttach-B
          - Network-EgressTgwAttach-C


  - name: Portal-Development
    account: PortalDevelopment
    region: *HOME_REGION
    cidrs:
      - 10.4.0.0/22
    enableDnsHostnames: true
    enableDnsSupport: true
    instanceTenancy: default
    useCentralEndpoints: false

    gatewayEndpoints:
      defaultPolicy: Default
      endpoints:
        - service: s3
        - service: dynamodb

    queryLogs:
      - "{{ AcceleratorPrefix }}-query-logs"

    dnsFirewallRuleGroups:
      - name: "{{ AcceleratorPrefix }}-block-group"
        priority: 101

    routeTables:
      - name: Workload1-Tgw-A
        routes: []
      - name: Workload1-Tgw-B
        routes: []

      - name: Workload1-App-A
        routes:
          - name: TgwRoute
            destination: 0.0.0.0/0
            type: transitGateway
            target: Network-Main
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb
      - name: Workload1-App-B
        routes:
          - name: TgwRoute
            destination: 0.0.0.0/0
            type: transitGateway
            target: Network-Main
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb

    subnets:
      - name: Workload1-App-A
        availabilityZone: a
        routeTable: Workload1-App-A
        ipv4CidrBlock: 10.4.0.0/24
      - name: Workload1-App-B
        availabilityZone: b
        routeTable: Workload1-App-B
        ipv4CidrBlock: 10.4.1.0/24

      - name: Workload1-MainTgwAttach-A
        availabilityZone: a
        routeTable: Workload1-Tgw-A
        ipv4CidrBlock: 10.4.3.208/28
      - name: Workload1-MainTgwAttach-B
        availabilityZone: b
        routeTable: Workload1-Tgw-B
        ipv4CidrBlock: 10.4.3.224/28

    transitGatewayAttachments:
      - name: Workload1-Main
        transitGateway:
          name: Network-Main
          account: Network
        routeTableAssociations:
          - Network-Main-Development
        routeTablePropagations:
          - Network-Main-Core
        subnets:
          - Workload1-MainTgwAttach-A
          - Workload1-MainTgwAttach-B

vpcFlowLogs:
  trafficType: ALL
  maxAggregationInterval: 600
  destinations:
    - s3
  destinationsConfig:
    s3:
      lifecycleRules: []
    cloudWatchLogs:
      retentionInDays: 365
  defaultFormat: false
  customFields:
    - version
    - account-id
    - interface-id
    - srcaddr
    - dstaddr
    - srcport
    - dstport
    - protocol
    - packets
    - bytes
    - start
    - end
    - action
    - log-status
    - vpc-id
    - subnet-id
    - instance-id
    - tcp-flags
    - type
    - pkt-srcaddr
    - pkt-dstaddr
    - region
    - az-id
    - pkt-src-aws-service
    - pkt-dst-aws-service
    - flow-direction
    - traffic-path

prefixLists:
  - addressFamily: IPv4
    entries:
      - "{{ OnPremisesPrefixList }}"
    maxEntries: 100
    name: onpremsises-prefix-list
    deploymentTargets:
      organizationalUnits:
        - Infrastructure
        - Portal/Development
        - Portal/Staging
        - Portal/Production
