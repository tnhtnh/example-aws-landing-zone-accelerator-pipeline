defaultVpc:
  delete: false
  excludeAccounts: []
endpointPolicies:
  - name: Default
    document: vpc-endpoint-policies/default.json
  - name: EC2
    document: vpc-endpoint-policies/ec2.json
transitGateways:
  - name: Network-Main
    account: Network
    region: ap-southeast-2
    shareTargets:
      organizationalUnits:
        - Infrastructure
    asn: 65521
    dnsSupport: enable
    vpnEcmpSupport: enable
    defaultRouteTableAssociation: disable
    defaultRouteTablePropagation: disable
    autoAcceptSharingAttachments: enable
    routeTables:
      - name: Network-Main-Core
        routes: []
      - name: Network-Main-Segregated
        routes: []
      - name: Network-Main-Shared
        routes: []
      - name: Network-Main-Standalone
        routes: []
centralNetworkServices:
  delegatedAdminAccount: Network
  ipams:
    - name: "{{ AcceleratorPrefix }}-ipam"
      region: "{{ AcceleratorHomeRegion }}"
      description: "{{ AcceleratorPrefix }} IPAM"
      operatingRegions:
        - ap-southeast-2
        - us-east-1
        - us-west-1
        - eu-central-1
        - eu-west-2
      pools:
        ### Global Ipam Pools ###
        - name: "{{ AcceleratorPrefix }}-aws-pool"
          description: "Primary AWS IP Space."
          provisionedCidrs:
            - "{{ AwsCidr }}"
        - name: "{{ AcceleratorPrefix }}-core-pool"
          description: "Core IP Space."
          locale: ap-southeast-2
          provisionedCidrs:
            - "{{ CoreCidr }}"
          sourceIpamPool: "{{ AcceleratorPrefix }}-aws-pool"
        - name: "{{ AcceleratorPrefix }}-portal-pool"
          description: "Portal IP Space."
          locale: ap-southeast-2
          provisionedCidrs:
            - "{{ PortalCidr }}"
          sourceIpamPool: "{{ AcceleratorPrefix }}-aws-pool"
        - name: "{{ AcceleratorPrefix }}-customer-pool"
          description: "Customer IP Space."
          locale: ap-southeast-2
          provisionedCidrs:
            - "{{ CustomerCidr }}"
          sourceIpamPool: "{{ AcceleratorPrefix }}-aws-pool"
  route53Resolver:
    endpoints:
      - name: EndpointOutbound
        type: OUTBOUND
        vpc: Egress
        allowedCidrs:
          - {{ AwsCidr }}
        subnets:
          - Egress-A
          - Egress-B
        rules:
          - name: "{{ AcceleratorPrefix }}-Endpoint-local"
            domainName: {{ InternalDnsName }}
            targetIps:
              - ip: 1.1.1.1
              # port: '5353' # only include if targeting a non-standard DNS port
              - ip: 2.2.2.2
            shareTargets:
              accounts:
                - Network
    queryLogs:
      name: "{{ AcceleratorPrefix }}-query-logs"
      destinations:
        - s3
        - cloud-watch-logs
      shareTargets:
        organizationalUnits:
          - Infrastructure
    firewallRuleGroups:
      - name: accelerator-block-group
        regions:
          - {{ AcceleratorHomeRegion }}
        rules:
          - name: managed-rule
            action: BLOCK
            managedDomainList: AWSManagedDomainsBotnetCommandandControl
            priority: 300
            blockResponse: NODATA
        shareTargets:
          organizationalUnits:
            - Infrastructure

vpcs:
  - name: Egress
    tags:
      - key: Name
        value: Egress
    account: Network
    region: "{{ AcceleratorHomeRegion }}"
    cidrs:
      - {{ CentralEgressCidr }}
    defaultSecurityGroupRulesDeletion: true
    internetGateway: true
    enableDnsHostnames: true
    enableDnsSupport: true
    instanceTenancy: default
    queryLogs:
      - "{{ AcceleratorPrefix }}-query-logs"
    routeTables:
      - name: Egress
        routes:
          - name: S3Gateway
            type: gatewayEndpoint
            target: s3
          - name: DynamoDBGateway
            type: gatewayEndpoint
            target: dynamodb
    subnets:
      - name: Egress-A
        availabilityZone: a
        routeTable: Egress
        ipv4CidrBlock: "{{ CentralEgressPublicSubnetACidr }}"
      - name: Egress-B
        availabilityZone: b
        routeTable: Egress
        ipv4CidrBlock: "{{ CentralEgressPublicSubnetBCidr }}"
      - name: EgressTgwAttach-A
        availabilityZone: a
        routeTable: Egress
        ipv4CidrBlock: "{{ CentralEgressInternalSubnetACidr }}"
      - name: EgressTgwAttach-B
        availabilityZone: b
        routeTable: Egress
        ipv4CidrBlock: "{{ CentralEgressInternalSubnetBCidr }}"
    gatewayEndpoints:
      defaultPolicy: Default
      endpoints:
        - service: s3
        - service: dynamodb
    interfaceEndpoints:
      central: true
      defaultPolicy: Default
      subnets:
        - Egress-A
        - Egress-B
      endpoints:
        - service: ec2
        - service: ec2messages
        - service: ssm
        - service: ssmmessages
        - service: kms
        - service: logs
        - service: cloudformation
        - service: secretsmanager
        - service: monitoring
        - service: access-analyzer
        - service: acm-pca
        - service: application-autoscaling
        - service: athena
        - service: autoscaling
        - service: autoscaling-plans
        - service: awsconnector
        - service: cloudtrail
        - service: codebuild
        - service: codecommit
        - service: codepipeline
        - service: config
        - service: ebs
        - service: ecr.api
        - service: ecr.dkr
        - service: ecs
        - service: ecs-agent
        - service: ecs-telemetry
        - service: elasticbeanstalk
        - service: elasticbeanstalk-health
        - service: elasticfilesystem
        - service: elasticloadbalancing
        - service: elasticmapreduce
        - service: events
        - service: execute-api
        - service: sns
        - service: sqs
        - service: sts
